<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.snailuu.boot.test.mapper.ArrangeMapper">

    <select id="getArrangeById" resultType="io.snailuu.boot.test.vo.ArrangeVo">
        select *
        from arrange
        where id = #{id}
    </select>

    <select id="getArrangePage" parameterType="io.snailuu.boot.test.query.ArrangeQuery"
            resultType="io.snailuu.boot.test.vo.ArrangeVo">
        select *
        from arrange
        <where>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="morningBegin != null">
                and morning_begin >= #{morningBegin}
            </if>
            <if test="morningEnd != null">
                and morning_end le; #{morningEnd}
            </if>
            <if test="afternoonBegin != null">
                and afternoon_begin >= #{afternoonBegin}
            </if>
            <if test="afternoonEnd != null">
                and afternoon_end le; #{afternoonEnd}
            </if>
            <if test="nightBegin != null">
                and night_begin >= #{nightBegin}
            </if>
            <if test="nightEnd != null">
                and night_end le; #{nightEnd}
            </if>
        </where>
    </select>

    <select id="getAppArrangeById" resultType="io.snailuu.boot.test.vo.AppArrangeVo">
        select *
        from arrange
        where id = #{id}
    </select>

    <select id="getAppArrangePage" parameterType="io.snailuu.boot.test.query.AppArrangeQuery"
            resultType="io.snailuu.boot.test.vo.AppArrangeVo">
        select *
        from arrange
        <where>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="morningBegin != null">
                and morning_begin >= #{morningBegin}
            </if>
            <if test="morningEnd != null">
                and morning_end le; #{morningEnd}
            </if>
            <if test="afternoonBegin != null">
                and afternoon_begin >= #{afternoonBegin}
            </if>
            <if test="afternoonEnd != null">
                and afternoon_end le; #{afternoonEnd}
            </if>
            <if test="nightBegin != null">
                and night_begin >= #{nightBegin}
            </if>
            <if test="nightEnd != null">
                and night_end le; #{nightEnd}
            </if>
        </where>
    </select>

</mapper>
